import sys
import sqlite3
from PyQt6.QtWidgets import (QApplication, QWidget, QVBoxLayout, QLabel,
                             QPushButton, QLineEdit, QMessageBox, QInputDialog,
                             QScrollArea, QHBoxLayout, QTableWidget, QTableWidgetItem,
                             QFormLayout, QTextEdit, QMainWindow, QComboBox)
from PyQt6.QtGui import QPixmap


# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (—Å–æ–∑–¥–∞–Ω–∏–µ, –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç)
def init_db():
    conn = sqlite3.connect("users.db")
    cursor = conn.cursor()

    # Create users table if it doesn't exist
    cursor.execute(''' 
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            username TEXT UNIQUE NOT NULL,
            password TEXT NOT NULL,
            name TEXT
        )
    ''')

    # Create orders table if it doesn't exist
    cursor.execute(''' 
        CREATE TABLE IF NOT EXISTS orders (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            user_id INTEGER NOT NULL,
            order_details TEXT NOT NULL,
            status TEXT NOT NULL,
            FOREIGN KEY (user_id) REFERENCES users(id)
        )
    ''')

    conn.commit()
    conn.close()


def add_user_id_column():
    conn = sqlite3.connect("users.db")
    cursor = conn.cursor()

    # Add user_id column to the orders table (if it doesn't already exist)
    try:
        cursor.execute('''ALTER TABLE orders ADD COLUMN user_id INTEGER''')
        conn.commit()
    except sqlite3.OperationalError:
        pass  # Column already exists or another error occurs

    conn.close()


# –ö–ª–∞—Å—Å –¥–ª—è –º–µ–Ω—é
class MenuItem:
    def __init__(self, name, price):
        self.name = name
        self.price = price


# –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
class MainWindow(QWidget):
    def __init__(self, user_id):
        super().__init__()
        self.setWindowTitle("–ú–µ–Ω—é –ú–∞–∫–¥–æ–Ω–∞–ª—å–¥—Å–∞")

        # –≠–ª–µ–º–µ–Ω—Ç—ã –º–µ–Ω—é
        self.menu_items = [
            MenuItem("üçî–ß–∏–∑–±—É—Ä–≥–µ—Äüçî", 180),
            MenuItem("üçü–ö–∞—Ä—Ç–æ—à–∫–∞ —Ñ—Ä–∏üçü", 100),
            MenuItem("ü•§–ù–∞–ø–∏—Ç–æ–∫ü•§", 50),
            MenuItem("ü•ü–ù–∞–≥–≥–µ—Ç—Å—ãü•ü", 200),
            MenuItem("ü•ó–°–∞–ª–∞—Ç –¶–µ–∑–∞—Ä—åü•ó", 250),
            MenuItem("ü•õ–ú–æ–ª–æ—á–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—åü•õ", 120),
            MenuItem("üçî–§–∏—à–±—É—Ä–≥–µ—Ä—ãüçî", 160),
            MenuItem("ü•Æ–ü–∏—Ä–æ–∂–æ–∫ —Å –≤–∏—à–Ω–µ–πü•Æ", 70),
            MenuItem("‚òï–ö–æ—Ñ–µ‚òï", 90)
        ]

        self.cart = []
        self.order_history = []
        self.user_id = user_id
        self.initUI()

    def initUI(self):
        layout = QVBoxLayout()

        button_cart = QPushButton("–í—ã—Ö–æ–¥ —Å –∞–∫–∫–∞—É–Ω—Ç–∞")
        button_cart.clicked.connect(self.open_login)
        layout.addWidget(button_cart)

        button_cart = QPushButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        button_cart.clicked.connect(self.open_setting)
        layout.addWidget(button_cart)

        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ–∫—Ä—É—Ç–∫—É
        scroll = QScrollArea()
        scroll.setWidgetResizable(True)
        scroll_widget = QWidget()
        scroll_layout = QVBoxLayout()

        # –ú–µ–Ω—é
        for item in self.menu_items:
            h_layout = QHBoxLayout()
            h_layout.addWidget(QLabel(f"{item.name} - {item.price} ‚ÇΩ"))
            button = QPushButton("+")
            button.clicked.connect(lambda checked, item=item: self.add_to_cart(item))
            h_layout.addWidget(button)
            scroll_layout.addLayout(h_layout)

        scroll_widget.setLayout(scroll_layout)
        scroll.setWidget(scroll_widget)

        layout.addWidget(scroll)

        # –ö–Ω–æ–ø–∫–∏ –∫–æ—Ä–∑–∏–Ω—ã –∏ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤
        button_cart = QPushButton("–ö–æ—Ä–∑–∏–Ω–∞")
        button_cart.clicked.connect(self.open_cart)
        layout.addWidget(button_cart)

        button_history = QPushButton("–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤")
        button_history.clicked.connect(self.open_order_history)
        layout.addWidget(button_history)

        self.setLayout(layout)

    def open_login(self):
        self.close()
        self.login_window = Login()
        self.login_window.show()

    def add_to_cart(self, item):
        self.cart.append(item)
        QMessageBox.information(self, "–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É", f"{item.name} –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∫–æ—Ä–∑–∏–Ω—É!")

    def open_cart(self):
        if not self.cart:
            QMessageBox.information(self, "–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞", "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!")
            return
        self.cart_window = CartWindow(self.cart, self.order_history, self.user_id)
        self.cart_window.show()

    def open_setting(self):
        self.open_setting = Setting()
        self.open_setting.show()

    def open_order_history(self):
        self.history_window = OrderHistoryWindow(self.user_id)
        self.history_window.show()


class Setting(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):
        layout = QVBoxLayout()

        btn_open_setting = QPushButton('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ 2.0')
        btn_open_setting.clicked.connect(self.open_obnov)
        layout.addWidget(btn_open_setting)

        btn_open_setting1 = QPushButton('–í–µ—Ä—Å–∏—è 1.0')
        btn_open_setting1.clicked.connect(self.open_obnov1)
        layout.addWidget(btn_open_setting1)

        btn_open_setting1 = QPushButton('–†–µ—Å—Ç–æ—Ä–∞–Ω—ã')
        btn_open_setting1.clicked.connect(self.open_restaurant)
        layout.addWidget(btn_open_setting1)

        open_license_window = QPushButton('–û—Ç–∫—Ä—ã—Ç—å –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ')
        open_license_window.clicked.connect(self.open_license)
        layout.addWidget(open_license_window)

        btn = QPushButton('–ù–∞–∑–∞–¥')
        btn.clicked.connect(self.open_men)
        layout.addWidget(btn)

        self.setLayout(layout)

    def open_license(self):
        self.close()
        self.license_window = LicenseWindow()
        self.license_window.show()

    def open_men(self):
        self.close()
        self.menu_window = MainWindow(self)



    def open_obnov(self):
        self.close()
        self.obnov_window = Obnov()
        self.obnov_window.show()

    def open_obnov1(self):
        self.close()
        self.obnov_window1 = Obnov1()
        self.obnov_window1.show()

    def open_restaurant(self):
        self.close()
        self.restaurant_window = Restaurant()
        self.restaurant_window.show()


class LicenseWindow(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–õ–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ")
        self.setGeometry(450, 175, 400, 300)

        layout = QVBoxLayout()

        # –ß—Ç–µ–Ω–∏–µ –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è –∏–∑ —Ñ–∞–π–ª–∞
        with open('license_agreement.txt', 'r', encoding='utf-8') as file:
            license_text = file.read()

        # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–∏—Ü–µ–Ω–∑–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è
        self.text_edit = QTextEdit()
        self.text_edit.setPlainText(license_text)
        self.text_edit.setReadOnly(True)  # –î–µ–ª–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —á—Ç–µ–Ω–∏—è

        layout.addWidget(self.text_edit)
        self.setLayout(layout)


class Restaurant(QMainWindow):
    def __init__(self):
        super().__init__()

        self.setWindowTitle("–ü–æ–∏—Å–∫ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–æ–≤ –≤ –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥–µ")
        self.setGeometry(450, 175, 300, 550)

        self.central_widget = QWidget()
        self.setCentralWidget(self.central_widget)

        self.layout = QVBoxLayout()
        self.central_widget.setLayout(self.layout)

        self.btn = QPushButton('–ù–∞–∑–∞–¥')
        self.btn.clicked.connect(self.open_setting)
        self.layout.addWidget(self.btn)

        self.region_label = QLabel("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–π–æ–Ω:")
        self.region_combo = QComboBox()
        self.region_combo.addItems([
            "–ù–µ –≤—ã–±—Ä–∞–Ω",
            "–ê–¥–º–∏—Ä–∞–ª—Ç–µ–π—Å–∫–∏–π",
            "–í–∞—Å–∏–ª–µ–æ—Å—Ç—Ä–æ–≤—Å–∫–∏–π",
            "–í—ã–±–æ—Ä–≥—Å–∫–∏–π",
            "–ö–∞–ª–∏–Ω–∏–Ω—Å–∫–∏–π",
            "–ö–∏—Ä–æ–≤—Å–∫–∏–π",
            "–ö–æ–ª–ø–∏–Ω—Å–∫–∏–π",
            "–ö—Ä–∞—Å–Ω–æ–≥–≤–∞—Ä–¥–µ–π—Å–∫–∏–π",
            "–ö—Ä–∞—Å–Ω–æ—Å–µ–ª—å—Å–∫–∏–π",
            "–ö—Ä–æ–Ω—à—Ç–∞–¥—Ç—Å–∫–∏–π",
            "–ö—É—Ä–æ—Ä—Ç–Ω—ã–π",
            "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π",
            "–ù–µ–≤—Å–∫–∏–π",
            "–ü–µ—Ç—Ä–æ–≥—Ä–∞–¥—Å–∫–∏–π",
            "–ü—Ä–∏–º–æ—Ä—Å–∫–∏–π",
            "–ü—É—à–∫–∏–Ω—Å–∫–∏–π",
            "–§—Ä—É–Ω–∑–µ–Ω—Å–∫–∏–π",
            "–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π"
        ])
        self.layout.addWidget(self.region_label)
        self.layout.addWidget(self.region_combo)

        self.address_label = QLabel("–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å:")
        self.address_input = QLineEdit()
        self.layout.addWidget(self.address_label)
        self.layout.addWidget(self.address_input)

        self.table = QTableWidget()
        self.table.setColumnCount(2)
        self.table.setHorizontalHeaderLabels(["–ê–¥—Ä–µ—Å", "–†–∞–π–æ–Ω"])
        self.layout.addWidget(self.table)

        self.address_input.textChanged.connect(self.update_table)
        self.region_combo.currentIndexChanged.connect(self.update_table)

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        self.conn = sqlite3.connect("restaurant.db")
        self.update_table()  # –ù–∞—á–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã

    def update_table(self):
        region = self.region_combo.currentText()
        address = self.address_input.text()

        cursor = self.conn.cursor()

        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
        if region == "–ù–µ –≤—ã–±—Ä–∞–Ω":
            query = "SELECT address, region FROM restaurants WHERE address LIKE ?"
            cursor.execute(query, (f"%{address}%",))
        else:
            query = "SELECT address, region FROM restaurants WHERE region = ? AND address LIKE ?"
            cursor.execute(query, (region, f"%{address}%"))

        results = cursor.fetchall()
        self.table.setRowCount(len(results))

        for row_idx, (address, region) in enumerate(results):
            self.table.setItem(row_idx, 0, QTableWidgetItem(address))
            self.table.setItem(row_idx, 1, QTableWidgetItem(region))

    def open_setting(self):
        self.close()
        self.open_setting = Setting()
        self.open_setting.show()


class Obnov(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–∫–Ω–∞
        self.setGeometry(450, 175, 400, 400)
        self.setWindowTitle('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ 2.0')

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        self.btn = QPushButton('–ù–∞–∑–∞–¥', self)
        self.btn.resize(self.btn.sizeHint())
        self.btn.move(165, 365)
        self.btn.clicked.connect(self.open_setting)

        # –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∫—É –∑–∞–≥–æ–ª–æ–≤–∫–∞
        self.label = QLabel(self)
        self.label.setText("–°–ø–∏—Å–æ–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–π –≤ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ 2.0")
        self.label.move(100, 15)

        # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        self.text_area = QTextEdit(self)
        self.text_area.setReadOnly(True)
        self.text_area.setPlainText(self.get_text_content())
        self.text_area.setGeometry(15, 40, 370, 320)  # –ü–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏

    def get_text_content(self):
        return (
            "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ 2.0:\n\n"
            "1. –î–æ–±–∞–≤–∏—Ç—å –≥–∞–ª–æ—á–∫—É –æ—Å—Ç–∞–≤–∞—Ç—å—Å—è –≤ –∞–∫–∫–∞—É–Ω—Ç–µ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ.\n"
            "2. –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥—ã –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –ø–æ–æ—â—Ä–µ–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö.\n"
            "3. –ù–∞—Ä–∏—Å–æ–≤–∞—Ç—å –Ω–æ–≤—É—é –∏–∫–æ–Ω–∫—É.\n"
            "4. –î–æ–±–∞–≤–∏—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –¥–µ–ª–∞—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥—ã –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–∞–∑.\n"
            "5. –î–æ–±–∞–≤–∏—Ç—å —Ä–µ–∞–ª—å–Ω–æ–µ –≤—Ä–µ–º—è –∏ –≤–æ —Å–∫–æ–ª—å–∫–æ –±—ã–ª —Å–æ–∑–¥–∞–Ω –∑–∞–∫–∞–∑.\n"
            "6. –ò—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤ —Å–¥–µ–ª–∞—Ç—å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö, –ø–ª—é—Å –¥–æ–±–∞–≤–∏—Ç—å –≤—Ä–µ–º—è –∑–∞–∫–∞–∑–∞.\n"
            "7. –°–¥–µ–ª–∞—Ç—å –∑–∞—Å—Ç–∞–≤–∫—É.\n"
            "8. –°–¥–µ–ª–∞—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n"
            "9. –°–¥–µ–ª–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –¥–ª—è –æ–ø–µ—Ä–∞—Ç–∏–≤–Ω–æ–≥–æ —Ä–µ—à–µ–Ω–∏—è –≤–æ–∑–Ω–∏–∫–∞—é—â–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏ –ø—Ä–æ–±–ª–µ–º.\n"
            "10. –î–æ–±–∞–≤–∏—Ç—å –ø–∞—Å—Ö–∞–ª–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞ –∏ –ø–æ–≤—ã—à–µ–Ω–∏—è –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏.\n"
            "11. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –±–∞–Ω–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –º–æ—à–µ–Ω–Ω–∏—á–µ—Å—Ç–≤–∞.\n"
            "12. –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã—Ö–æ–¥–∞ –∏–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n"
            "13. –ö–Ω–æ–ø–∫–∞ ¬´–ü–æ–¥—Ä–æ–±–Ω–µ–µ¬ª –¥–ª—è –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–æ–≤–∞—Ä–∞—Ö –∏–ª–∏ —É—Å–ª—É–≥–∞—Ö.\n"
            "14. –ö–∞—Ä—Ç–∏–Ω–∫–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–∏—è—Ç–∏—è –∏ –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –≤–Ω–∏–º–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n"
            "15. –¶–∏—Ñ—Ä –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∫–∞—Ä—Ç—ã —É–≤–µ–ª–∏—á–∏—Ç—å –¥–æ 16 –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –ø—Ä–∏ –≤–≤–æ–¥–µ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç—ã.\n"
            "16. –†–µ–∫–ª–∞–º–∞ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ—Ö–æ–¥–∞ –∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤.\n"
            "17. –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥—Ä—É–∂–µ–ª—é–±–Ω–æ–π –∞—Ç–º–æ—Å—Ñ–µ—Ä—ã.\n"
            "18. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ª—é–±–∏–º—ã—Ö –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n"
            "19. –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏ —Å–º–µ–Ω—É —è–∑—ã–∫–∞ –¥–ª—è –∞–¥–∞–ø—Ç–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.\n"
            "20. –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã: —Ç–∞–± ‚Äî –∫–æ—Ä–∑–∏–Ω–∞, –Ω–∞ —Ü–∏—Ñ—Ä—ã ‚Äî –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–æ–≤.\n"
            "21. –†–æ–∑—ã–≥—Ä—ã—à–∏ –µ–¥—ã –¥–ª—è –ø—Ä–∏–≤–ª–µ—á–µ–Ω–∏—è –Ω–æ–≤—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n"
            "22. –ú–∏–Ω–∏-–∏–≥—Ä—ã –¥–ª—è —Ä–∞–∑–≤–ª–µ—á–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n"
            "23. –£–≤–µ–ª–∏—á–∏—Ç—å –º–µ–Ω—é.\n"
            "24. –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π.\n"
            "\n"
            "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:\n"
            "25. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∑–∞–∫–∞–∑–∞, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∑–Ω–∞–ª–∏, –∫–æ–≥–¥–∞ –∏—Ö –∑–∞–∫–∞–∑ –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤.\n"
            "26. –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –ø–æ –ø–∏—Ç–∞–Ω–∏—é –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏–π –∏ –∑–¥–æ—Ä–æ–≤—å—è.\n"
            "27. –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ —Å—á–µ—Ç –≤–Ω—É—Ç—Ä–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã.\n"
            "28. –ü–æ–ø–æ–ª–Ω—è—Ç—å —Å—á–µ—Ç –≤–Ω—É—Ç—Ä–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è .\n"
            "29. –ö–∞—Ä—Ç–∞ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ —Å –Ω–∞–∫–æ–ø–∏—Ç–µ–ª—å–Ω—ã–º–∏ –±–∞–ª–ª–∞–º–∏ –∑–∞ –∫–∞–∂–¥–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ.\n"
            "30. –û–Ω–ª–∞–π–Ω-–º–µ–Ω—é –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —è–∑—ã–∫–∞—Ö –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n"
            "31. –ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è–º–∏ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.\n"
            "32. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –±–ª—é–¥–∞–º —Å —É—á–µ—Ç–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Å—É—Ç–æ–∫.\n"
            "33. –û–Ω–ª–∞–π–Ω-–æ–±—É—á–µ–Ω–∏–µ –ø–æ –ø—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏—é –±–ª—é–¥ —Å —Ä–µ—Ü–µ–ø—Ç–æ–º.\n"
            "34. –û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å –ø–æ –∫–∞—á–µ—Å—Ç–≤—É –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è —É—Å–ª—É–≥.\n"
            "35. –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –Ω–∞–ø–∏—Ç–∫–∞–º.\n"
            "36. –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Ñ–∏—Ç–Ω–µ—Å-—Ç—Ä–µ–∫–µ—Ä–∞–º–∏ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è —Ü–µ–ª–µ–π.\n"
            "37. –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Å–∫–∏–¥–∫–∞—Ö –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏.\n"

            # –î–æ–±–∞–≤—å—Ç–µ –±–æ–ª–µ–µ –ø–æ–¥—Ä–æ–±–Ω–æ –≤—Å–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–ª–∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å.
        )

    def open_setting(self):
        self.close()
        self.open_setting = Setting()  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–ª–∞—Å—Å Setting –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
        self.open_setting.show()


class Obnov1(QWidget):
    def __init__(self):
        super().__init__()
        self.initUI()

    def initUI(self):
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –æ–∫–Ω–∞
        self.setGeometry(450, 175, 400, 400)
        self.setWindowTitle('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ 1.0')

        # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
        self.btn = QPushButton('–ù–∞–∑–∞–¥', self)
        self.btn.resize(self.btn.sizeHint())
        self.btn.move(100, 365)
        self.btn.clicked.connect(self.open_setting)

        # –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∫—É –∑–∞–≥–æ–ª–æ–≤–∫–∞
        self.label = QLabel(self)
        self.label.setText("–°–ø–∏—Å–æ–∫ —Ç–æ–≥–æ —á—Ç–æ –±—ã–ª–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ –≤ –≤–µ—Ä—Å–∏–∏ 1.0")
        self.label.move(100, 15)

        # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—É—é –æ–±–ª–∞—Å—Ç—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        self.text_area = QTextEdit(self)
        self.text_area.setReadOnly(True)
        self.text_area.setPlainText(self.get_text_content1())
        self.text_area.setGeometry(15, 40, 370, 320)  # –ü–æ–ª–æ–∂–µ–Ω–∏–µ –∏ —Ä–∞–∑–º–µ—Ä —Ç–µ–∫—Å—Ç–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏

    def get_text_content1(self):
        return (
            "–ü—Ä–æ–µ–∫—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ–Ω–ª–∞–π–Ω-–∑–∞–∫–∞–∑–∞ –µ–¥—ã, –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –º–µ–Ω—é, –¥–æ–±–∞–≤–ª—è—Ç—å —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É, –æ—Ñ–æ—Ä–º–ª—è—Ç—å –∑–∞–∫–∞–∑—ã –∏ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤. –ò–¥–µ—è –ø—Ä–æ–µ–∫—Ç–∞ –∑–∞–∫–ª—é—á–∞–µ—Ç—Å—è –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ —É–¥–æ–±–Ω–æ–≥–æ –∏ –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ –ø–æ–Ω—è—Ç–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –∑–∞–∫–∞–∑–∞—Ç—å –µ–¥—É —Å –ø–æ–º–æ—â—å—é –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –∏–ª–∏ –∫–æ–º–ø—å—é—Ç–µ—Ä–∞, –ø—Ä–∏ —ç—Ç–æ–º –∏–º–µ—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, —Ç–∞–∫–∏–µ –∫–∞–∫ –ø—Ä–æ–º–æ–∫–æ–¥—ã, –∏—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞.\n\n"

            "–û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏:\n\n"

            "–û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤. –î–ª—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏ —ç—Ç–æ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫–ª–∞—Å—Å—ã –∏ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–∞–∂–¥–∞—è –∏–∑ –∫–æ—Ç–æ—Ä—ã—Ö –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –∞—Å–ø–µ–∫—Ç —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã.\n\n"

            "–ö–ª–∞—Å—Å—ã –∏ –∏—Ö —Ä–æ–ª—å:\n\n"

            "–ö–ª–∞—Å—Å Product:\n"
            "–≠—Ç–æ—Ç –∫–ª–∞—Å—Å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –æ—Ç–¥–µ–ª—å–Ω–æ–µ –±–ª—é–¥–æ –≤ –º–µ–Ω—é. –û–Ω —Ö—Ä–∞–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–∑–≤–∞–Ω–∏–∏ –±–ª—é–¥–∞, –µ–≥–æ —Ü–µ–Ω–µ –∏ –æ–ø–∏—Å–∞–Ω–∏–∏. –ö–ª–∞—Å—Å –∏–º–µ–µ—Ç –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –±–ª—é–¥–µ, –∞ —Ç–∞–∫–∂–µ –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–ª—é–¥–µ. –≠—Ç–æ –ø–æ–∑–≤–æ–ª—è–µ—Ç –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å –º–µ–Ω—é –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–º–∏ –æ –∫–∞–∂–¥–æ–º —Ç–æ–≤–∞—Ä–µ.\n"
            "class Product:\n"
            "    def __init__(self, name, price, description):\n"
            "        self.name = name\n"
            "        self.price = price\n"
            "        self.description = description\n\n"
            "    def get_info(self):\n"
            "        return f'{self.name}: {self.description}, Price: {self.price}'\n\n"

            "–ö–ª–∞—Å—Å Cart:\n"
            "–≠—Ç–æ—Ç –∫–ª–∞—Å—Å —É–ø—Ä–∞–≤–ª—è–µ—Ç –∫–æ—Ä–∑–∏–Ω–æ–π –ø–æ–∫—É–ø–æ–∫, –∫—É–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥—É—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã. –û–Ω —Ö—Ä–∞–Ω–∏—Ç —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤, –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º, –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω—É, —É–¥–∞–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –∏ —Ä–∞—Å—á–µ—Ç–∞ –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏. –¢–∞–∫–∂–µ –∑–¥–µ—Å—å —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–∫–∏–¥–æ–∫, –µ—Å–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥ —è–≤–ª—è–µ—Ç—Å—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–º.\n"
            "class Cart:\n"
            "    def __init__(self):\n"
            "        self.items = []\n"
            "        self.total_price = 0\n\n"
            "    def add_item(self, product):\n"
            "        self.items.append(product)\n"
            "        self.total_price += product.price\n\n"
            "    def remove_item(self, product):\n"
            "        self.items.remove(product)\n"
            "        self.total_price -= product.price\n\n"

            "–ö–ª–∞—Å—Å Order:\n"
            "–≠—Ç–æ—Ç –∫–ª–∞—Å—Å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞. –û–Ω –≤–∫–ª—é—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∞—Ö, –æ–±—â–µ–π —Å—Ç–æ–∏–º–æ—Å—Ç–∏, –∞ —Ç–∞–∫–∂–µ –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–∞–∫–∞–∑–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–≤ –ø—Ä–æ—Ü–µ—Å—Å–µ', '–¥–æ—Å—Ç–∞–≤–ª–µ–Ω' –∏ —Ç. –¥.). –ö–ª–∞—Å—Å —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–∫–∞–∑ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –µ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –º–æ–≥–ª–∏ –≤–∏–¥–µ—Ç—å –∏—Å—Ç–æ—Ä–∏—é —Å–≤–æ–∏—Ö –∑–∞–∫–∞–∑–æ–≤.\n"
            "class Order:\n"
            "    def __init__(self, cart, user):\n"
            "        self.cart = cart\n"
            "        self.user = user\n"
            "        self.status = 'in progress'\n"
            "        self.total = cart.total_price\n\n"
            "    def save_order(self):\n"
            "        # –õ–æ–≥–∏–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö\n"
            "        pass\n\n"

            "–ö–ª–∞—Å—Å User:\n"
            "–ö–ª–∞—Å—Å User –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π —É—á–µ—Ç–Ω—É—é –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –û–Ω —Ö—Ä–∞–Ω–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ, —Ç–∞–∫—É—é –∫–∞–∫ –∏–º—è, –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã, –ø–∞—Ä–æ–ª—å –∏ –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤. –≠—Ç–æ—Ç –∫–ª–∞—Å—Å –≤–∫–ª—é—á–∞–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏, –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.\n"
            "class User:\n"
            "    def __init__(self, username, password):\n"
            "        self.username = username\n"
            "        self.password = password\n"
            "        self.orders_history = []\n\n"
            "    def register(self):\n"
            "        # –õ–æ–≥–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            "        pass\n\n"
            "    def login(self):\n"
            "        # –õ–æ–≥–∏–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è\n"
            "        pass\n\n"

            "–ö–ª–∞—Å—Å Database:\n"
            "–ö–ª–∞—Å—Å, —É–ø—Ä–∞–≤–ª—è—é—â–∏–π –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö, –∑–∞–∫–∞–∑–∞—Ö –∏ –¥—Ä—É–≥–∏—Ö –¥–∞–Ω–Ω—ã—Ö, —Ç–∞–∫–∏—Ö –∫–∞–∫ –ø—Ä–æ–¥—É–∫—Ç—ã –∏ –ø—Ä–æ–º–æ–∫–æ–¥—ã. –û–Ω —Ä–µ–∞–ª–∏–∑—É–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏, —Ç–∞–∫–∏–µ –∫–∞–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∏ –∏–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.\n"
            "class Database:\n"
            "    def __init__(self):\n"
            "        self.users = []\n"
            "        self.orders = []\n\n"
            "    def add_user(self, user):\n"
            "        self.users.append(user)\n\n"
            "    def add_order(self, order):\n"
            "        self.orders.append(order)\n\n"

            "–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –∫–ª–∞—Å—Å–æ–≤ –∏ —Ñ—É–Ω–∫—Ü–∏–∏:\n\n"

            "-–û—Å–Ω–æ–≤–Ω–æ–π –ø–æ—Ç–æ–∫:\n"
            "–ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–¥—É–∫—Ç—ã –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –∏—Ö –≤ –∫–æ—Ä–∑–∏–Ω—É, –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å –∫–ª–∞—Å—Å–æ–º Cart, –∫–æ—Ç–æ—Ä—ã–π —É–ø—Ä–∞–≤–ª—è–µ—Ç –≤—Å–µ–º–∏ —Ç–æ–≤–∞—Ä–∞–º–∏ –≤ –∫–æ—Ä–∑–∏–Ω–µ. –ü–æ—Å–ª–µ —Ç–æ–≥–æ –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–≤–µ—Ä—à–∞–µ—Ç –≤—ã–±–æ—Ä, –æ–Ω –º–æ–∂–µ—Ç –ø—Ä–∏–º–µ–Ω–∏—Ç—å –ø—Ä–æ–º–æ–∫–æ–¥ (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å), –∏—Å–ø–æ–ª—å–∑—É—è –∫–ª–∞—Å—Å PromoCode. –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∑–∞–∫–∞–∑ —Å –ø–æ–º–æ—â—å—é –∫–ª–∞—Å—Å–∞ Order, –∫–æ—Ç–æ—Ä—ã–π —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è.\n\n"

            "-–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤:\n"
            "–ö–∞–∂–¥—ã–π –∑–∞–∫–∞–∑ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é –∫–ª–∞—Å—Å–∞ Database. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–æ–∂–µ—Ç –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å —Å–≤–æ—é –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤, –±–ª–∞–≥–æ–¥–∞—Ä—è –º–µ—Ç–æ–¥—É orders_history –≤ –∫–ª–∞—Å—Å–µ User.\n\n"

            "-–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:\n"
            "–î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö, –∑–∞–∫–∞–∑–∞—Ö, –±–ª—é–¥–∞—Ö –∏ –ø—Ä–æ–º–æ–∫–æ–¥–∞—Ö –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–ª–∞—Å—Å Database. –≠—Ç–æ—Ç –∫–ª–∞—Å—Å —Ä–µ–∞–ª–∏–∑—É–µ—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è, –∏–∑–≤–ª–µ—á–µ–Ω–∏—è –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.\n\n"

            "–ó–∞–∫–ª—é—á–µ–Ω–∏–µ:\n\n"
            "–ü—Ä–æ–µ–∫—Ç –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è–µ—Ç —Å–æ–±–æ–π –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –æ–Ω–ª–∞–π–Ω-–∑–∞–∫–∞–∑–∞ –µ–¥—ã —Å —à–∏—Ä–æ–∫–∏–º –Ω–∞–±–æ—Ä–æ–º —Ñ—É–Ω–∫—Ü–∏–π, –≤–∫–ª—é—á–∞—è –∫–æ—Ä–∑–∏–Ω—É, –∏—Å—Ç–æ—Ä–∏—é –∑–∞–∫–∞–∑–æ–≤, –ø—Ä–æ–º–æ–∫–æ–¥—ã –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ö–ª–∞—Å—Å—ã, —Ç–∞–∫–∏–µ –∫–∞–∫ Product, Cart, Order, User, PromoCode –∏ Database, –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É—é—Ç –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º, —Å–æ–∑–¥–∞–≤–∞—è —É–¥–æ–±–Ω—ã–π –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.\n\n"

            "–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –¥–æ—Ä–∞–±–æ—Ç–∫–∏ –∏ —Ä–∞–∑–≤–∏—Ç–∏—è –≤–∫–ª—é—á–∞—é—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö —Å–ø–æ—Å–æ–±–æ–≤ –æ–ø–ª–∞—Ç—ã, —É–ª—É—á—à–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –∞–Ω–∏–º–∞—Ü–∏–π, –∞ —Ç–∞–∫–∂–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é —Å –¥—Ä—É–≥–∏–º–∏ —Å–µ—Ä–≤–∏—Å–∞–º–∏ –¥–ª—è —É–ª—É—á—à–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –æ–ø—ã—Ç–∞. –í –¥–∞–ª—å–Ω–µ–π—à–µ–º –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø–æ–¥–¥–µ—Ä–∂–∫—É –º–Ω–æ–≥–æ–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö —É—á–µ—Ç–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ç–∑—ã–≤–æ–≤ –æ –±–ª—é–¥–∞—Ö –∏ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤.\n"
        )

    def open_setting(self):
        self.close()
        self.open_setting = Setting()  # –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–ª–∞—Å—Å Setting –æ–ø—Ä–µ–¥–µ–ª–µ–Ω
        self.open_setting.show()


# –û–∫–Ω–æ –¥–ª—è –∫–æ—Ä–∑–∏–Ω—ã
class CartWindow(QWidget):
    def __init__(self, cart, order_history, user_id):
        super().__init__()
        self.setWindowTitle("–ö–æ—Ä–∑–∏–Ω–∞")
        self.cart = cart
        self.order_history = order_history
        self.user_id = user_id
        self.initUI()

    def initUI(self):
        layout = QVBoxLayout()

        self.cart_table = QTableWidget()
        self.cart_table.setRowCount(len(self.cart))
        self.cart_table.setColumnCount(3)
        self.cart_table.setHorizontalHeaderLabels(["–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ", "–¶–µ–Ω–∞ (—Ä—É–±)", "–£–¥–∞–ª–∏—Ç—å"])

        for row, item in enumerate(self.cart):
            self.cart_table.setItem(row, 0, QTableWidgetItem(item.name))
            self.cart_table.setItem(row, 1, QTableWidgetItem(str(item.price)))
            remove_button = QPushButton("–£–±—Ä–∞—Ç—å")
            remove_button.clicked.connect(lambda checked, row=row: self.remove_item(row))
            self.cart_table.setCellWidget(row, 2, remove_button)

        layout.addWidget(self.cart_table)

        # –ö–Ω–æ–ø–∫–∏ –∑–∞–∫–∞–∑–∞ –∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é
        order_button = QPushButton("–ó–∞–∫–∞–∑–∞—Ç—å")
        order_button.clicked.connect(self.open_order_dialog)
        layout.addWidget(order_button)

        back_button = QPushButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
        back_button.clicked.connect(self.close)
        layout.addWidget(back_button)

        self.setLayout(layout)

    def remove_item(self, row):
        item_name = self.cart[row].name
        self.cart.pop(row)  # –£–¥–∞–ª—è–µ–º —Ç–æ–≤–∞—Ä –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã
        QMessageBox.information(self, "–£–¥–∞–ª–µ–Ω–æ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã", f"{item_name} —É–±—Ä–∞–Ω–æ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã!")
        self.refresh_cart()

    def refresh_cart(self):
        self.cart_table.setRowCount(len(self.cart))
        for row, item in enumerate(self.cart):
            self.cart_table.setItem(row, 0, QTableWidgetItem(item.name))
            self.cart_table.setItem(row, 1, QTableWidgetItem(str(item.price)))
            remove_button = QPushButton("–£–±—Ä–∞—Ç—å")
            remove_button.clicked.connect(lambda checked, row=row: self.remove_item(row))
            self.cart_table.setCellWidget(row, 2, remove_button)

    def open_order_dialog(self):
        if not self.cart:
            QMessageBox.information(self, "–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞", "–î–æ–±–∞–≤—å—Ç–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–æ—Ä–∑–∏–Ω—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞.")
            return
        self.order_dialog = OrderDialog(self.cart, self.user_id)
        self.order_dialog.show()
        self.close()


# –û–∫–Ω–æ –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç—ã
class OrderDialog(QWidget):
    def __init__(self, cart, user_id):
        super().__init__()
        self.setWindowTitle("–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã")
        self.cart = cart
        self.user_id = user_id
        self.initUI()

    def initUI(self):
        layout = QVBoxLayout()

        self.card_number_input = QLineEdit()
        self.card_number_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ 16 —Ü–∏—Ñ—Ä –Ω–æ–º–µ—Ä–∞ –∫–∞—Ä—Ç—ã")
        layout.addWidget(self.card_number_input)

        pay_button = QPushButton("–û–ø–ª–∞—Ç–∏—Ç—å")
        pay_button.clicked.connect(self.confirm_order)
        layout.addWidget(pay_button)

        self.setLayout(layout)

    def confirm_order(self):
        valid_promo_codes = ["DISCOUNT10", "FREESHIP", "WELCOME50", "NEWYEAR15", "–ø–∂100–±–∞–ª–ª–æ–≤", "NEWYEAR", "MACMENU",
                             "1"]
        card_number = self.card_number_input.text()
        if len(card_number) == 16 and card_number.isdigit() or card_number in valid_promo_codes:
            # Save the order in the database
            order_details = ', '.join([item.name for item in self.cart])
            self.save_order(order_details)
            self.cart.clear()  # Empty the cart
            QMessageBox.information(self, "–ó–∞–∫–∞–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω", "–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ–ø–ª–∞—á–µ–Ω!")
            self.close()
        else:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –∏–ª–∏ –ø—Ä–æ–º–æ–∫–æ–¥. –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.")

    def save_order(self, order_details):
        conn = sqlite3.connect("users.db")
        cursor = conn.cursor()

        # Insert order into orders table
        cursor.execute('INSERT INTO orders (user_id, order_details, status) VALUES (?, ?, ?)',
                       (self.user_id, order_details, "–û–ø–ª–∞—á–µ–Ω"))

        conn.commit()
        conn.close()


# –û–∫–Ω–æ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–∫–∞–∑–æ–≤
class OrderHistoryWindow(QWidget):
    def __init__(self, user_id):
        super().__init__()
        self.setWindowTitle("–ò—Å—Ç–æ—Ä–∏—è –∑–∞–∫–∞–∑–æ–≤")
        self.user_id = user_id
        self.initUI()

    def initUI(self):
        layout = QVBoxLayout()

        self.history_table = QTableWidget()
        self.history_table.setRowCount(0)
        self.history_table.setColumnCount(2)
        self.history_table.setHorizontalHeaderLabels(["–ó–∞–∫–∞–∑", "–°—Ç–∞—Ç—É—Å"])

        # Fetch order history from the database
        self.load_order_history()

        layout.addWidget(self.history_table)

        back_button = QPushButton("–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")
        back_button.clicked.connect(self.close)
        layout.addWidget(back_button)

        self.setLayout(layout)

    def load_order_history(self):
        conn = sqlite3.connect("users.db")
        cursor = conn.cursor()

        # Fetch orders for the current user
        cursor.execute('SELECT order_details, status FROM orders WHERE user_id=?', (self.user_id,))
        orders = cursor.fetchall()

        conn.close()

        # Add each order to the table
        for order in orders:
            order_details, status = order
            row_position = self.history_table.rowCount()
            self.history_table.insertRow(row_position)
            self.history_table.setItem(row_position, 0, QTableWidgetItem(order_details))
            self.history_table.setItem(row_position, 1, QTableWidgetItem(status))


# –ì–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –≤—Ö–æ–¥–∞
class Login(QWidget):
    def __init__(self):
        super().__init__()
        self.setWindowTitle("–í—Ö–æ–¥ –≤ –∞–∫–∫–∞—É–Ω—Ç")
        self.layout = QVBoxLayout()

        self.pixmap = QPixmap('icons8-–∑–Ω–∞–∫-—á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏—è-—ç–º–æ–¥–∂–∏-48.jpg')
        self.image = QLabel(self)
        self.image.move(10, 0)
        self.image.resize(270, 140)
        self.image.setPixmap(self.pixmap)

        self.username_input = QLineEdit()
        self.username_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        self.layout.addWidget(self.username_input)

        self.password_input = QLineEdit()
        self.password_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å")
        self.password_input.setEchoMode(QLineEdit.EchoMode.Password)
        self.layout.addWidget(self.password_input)

        self.login_button = QPushButton("–í–æ–π—Ç–∏")
        self.login_button.clicked.connect(self.login)
        self.layout.addWidget(self.login_button)

        self.register_button = QPushButton("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
        self.register_button.clicked.connect(self.open_registration)
        self.layout.addWidget(self.register_button)

        self.setLayout(self.layout)

    def open_registration(self):
        self.close()
        self.registration_window = Registration(self)
        self.registration_window.show()

    def login(self):
        username = self.username_input.text()
        password = self.password_input.text()

        conn = sqlite3.connect("users.db")
        cursor = conn.cursor()

        cursor.execute('SELECT id, name FROM users WHERE username=? AND password=?', (username, password))
        result = cursor.fetchone()
        conn.close()

        if result:
            user_id, name = result
            self.close()
            self.main_window = MainWindow(user_id)
            self.main_window.show()
        else:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ù–µ–≤–µ—Ä–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ –ø–∞—Ä–æ–ª—å.")


# –û–∫–Ω–æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
class Registration(QWidget):
    def __init__(self, login_window):
        super().__init__()
        self.login_window = login_window
        self.setWindowTitle("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
        self.layout = QVBoxLayout()

        self.pixmap = QPixmap('icons8-–∑–Ω–∞–∫-—á–µ—Ä–µ–¥–æ–≤–∞–Ω–∏—è-—ç–º–æ–¥–∂–∏-48.jpg')
        self.image = QLabel(self)
        self.image.move(10, 0)
        self.image.resize(270, 140)
        self.image.setPixmap(self.pixmap)

        self.username_input = QLineEdit()
        self.username_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        self.layout.addWidget(self.username_input)

        self.password_input = QLineEdit()
        self.password_input.setPlaceholderText("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å")
        self.password_input.setEchoMode(QLineEdit.EchoMode.Password)
        self.layout.addWidget(self.password_input)

        self.register_button = QPushButton("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
        self.register_button.clicked.connect(self.register)
        self.layout.addWidget(self.register_button)

        self.register_button = QPushButton("–í–æ–π—Ç–∏")
        self.register_button.clicked.connect(self.open_login)
        self.layout.addWidget(self.register_button)

        self.setLayout(self.layout)

    def open_login(self):
        self.close()
        self.login_window = Login()
        self.login_window.show()

    def register(self):
        username = self.username_input.text()
        password = self.password_input.text()
        if not username or not password:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –ø–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã!")
            return

        conn = sqlite3.connect("users.db")
        cursor = conn.cursor()

        try:
            cursor.execute('INSERT INTO users (username, password) VALUES (?, ?)', (username, password))
            conn.commit()
            QMessageBox.information(self, "–£—Å–ø–µ—Ö", "–£—á–µ—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
            self.close()
            self.login_window.show()  # Open login window after successful registration
        except sqlite3.IntegrityError:
            QMessageBox.warning(self, "–û—à–∏–±–∫–∞", "–≠—Ç–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ –∑–∞–Ω—è—Ç–æ.")
        finally:
            conn.close()


if __name__ == "__main__":
    init_db()  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    add_user_id_column()  # Add user_id column if it's missing
    app = QApplication(sys.argv)
    login_window = Login()
    login_window.show()
    sys.exit(app.exec())  # –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
